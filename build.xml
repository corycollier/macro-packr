<?xml version="1.0" encoding="UTF-8"?>
<project name="macro-packr" default="full-build">

  <!-- Use this when the tools are managed by Composer in ${basedir}/bin -->
  <property name="pdepend" value="${basedir}/vendor/bin/pdepend"/>
  <property name="phpcs"   value="${basedir}/vendor/bin/phpcs"/>
  <property name="phpdox"  value="${basedir}/vendor/bin/phpdox"/>
  <property name="phploc"  value="${basedir}/vendor/bin/phploc"/>
  <property name="phpmd"   value="${basedir}/vendor/bin/phpmd"/>
  <property name="phpunit" value="${basedir}/vendor/bin/phpunit"/>

  <target name="full-build"
      depends="prepare,static-analysis,phpunit,phpcs,phpdox,-check-failure"
      description="Performs static analysis, runs the tests, and generates project documentation"/>

  <target name="quick-build"
      depends="prepare,lint,phpunit-no-coverage"
      description="Performs a lint check and runs the tests (without generating code coverage reports)"/>

  <target name="static-analysis"
      depends="lint,phploc,pdepend,phpmd,phpcs"
      description="Performs static analysis" />

  <target name="clean"
      unless="clean.done"
      description="Cleanup build artifacts">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/build/phpdox"/>
    <property name="clean.done" value="true"/>
  </target>

  <target name="prepare"
      unless="prepare.done"
      depends="clean"
      description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
    <property name="prepare.done" value="true"/>
  </target>

  <target name="lint"
      unless="lint.done"
      description="Perform syntax check of sourcecode files">
    <apply executable="php" taskname="lint">
      <arg value="-l" />

      <fileset dir="${basedir}/src">
        <include name="**/*.php" />
        <modified />
      </fileset>
    </apply>

    <property name="lint.done" value="true"/>
  </target>

  <target name="phploc"
      unless="phploc.done"
      description="Measure project size using PHPLOC and print human readable output. Intended for usage on the command line.">
    <exec executable="${phploc}" taskname="phploc">
      <arg value="--count-tests" />
      <arg path="${basedir}/src" />
      <arg value="--log-xml" />
      <arg path="${basedir}/build/logs/phploc.xml" />
    </exec>

    <property name="phploc.done" value="true"/>
  </target>

  <target name="pdepend"
      unless="pdepend.done"
      depends="prepare"
      description="Calculate software metrics using PHP_Depend and log result in XML format. Intended for usage within a continuous integration environment.">
    <exec executable="${pdepend}" taskname="pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
      <arg path="${basedir}/src" />
    </exec>

    <property name="pdepend.done" value="true"/>
  </target>

  <target name="phpmd"
      unless="phpmd.done"
      description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="${phpmd}" taskname="phpmd">
      <arg path="${basedir}/src" />
      <arg value="text" />
      <arg path="${basedir}/build/phpmd.xml" />
    </exec>

    <property name="phpmd.done" value="true"/>
  </target>

  <target name="phpcs"
      unless="phpcs.done"
      description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="${phpcs}" taskname="phpcs">
      <arg value="--standard=PSR2" />
      <arg value="--extensions=php" />
      <arg value="--ignore=autoload.php" />
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
      <arg path="${basedir}/src" />
    </exec>

    <property name="phpcs.done" value="true"/>
  </target>

  <target name="phpunit"
      unless="phpunit.done"
      depends="prepare"
      description="Run unit tests with PHPUnit">
    <exec executable="${phpunit}" resultproperty="result.phpunit" taskname="phpunit">
      <arg value="--configuration"/>
      <arg path="${basedir}/build/phpunit.xml"/>
    </exec>

    <property name="phpunit.done" value="true"/>
  </target>

  <target name="phpunit-no-coverage"
      unless="phpunit.done"
      depends="prepare"
      description="Run unit tests with PHPUnit (without generating code coverage reports)">
    <exec executable="${phpunit}" failonerror="true" taskname="phpunit">
      <arg value="--configuration"/>
      <arg path="${basedir}/build/phpunit.xml"/>
      <arg value="--no-coverage"/>
    </exec>

    <property name="phpunit.done" value="true"/>
  </target>

  <target name="phpdox"
      unless="phpdox.done"
      depends="phploc,phpcs,phpmd"
      description="Generate project documentation using phpDox">
    <exec executable="${phpdox}" dir="${basedir}" taskname="phpdox"/>

    <property name="phpdox.done" value="true"/>
  </target>

  <target name="-check-failure">
    <fail message="PHPUnit did not finish successfully">
      <condition>
        <not>
          <equals arg1="${result.phpunit}" arg2="0"/>
        </not>
      </condition>
    </fail>
  </target>
</project>
